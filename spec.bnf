program = { var_def | function_def } ;

var_def = identifier "::" type "=" expr ;
expr = expr "+" term
    | expr "-" term
    | term ;
term = term "*" factor
    | term "/" factor
    | factor
factor = identifier | number | call

number = ["-"] digit { digit } ;
digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;

identifier = (* {A-z | 0-9 } *) ;
call = identifier parameter_list ;

type = "int"

function_def = "lambda " identifier parameter_list body;
parameter_list = "(" [expr] {"," expr} ")" ;
body = "{" [stmt] {";" stmt} "}" ;
stmt = var_def
    | function_def
    | assign
    | ifelse
    | while
    | return ;
assign = identifier "=" expr ;
ifelse = "if" expr "then" body "else" body ;
while = "while" expr "do" body ;
return = "return" expr ;